To be more specific, you can specify the particular software you want.
e.g.,

```
{{ site.remote.prompt }} module avail stata
```
{: .language-bash}

```
~~~~~~~~~~~~~ /shared/ucl/apps/modulefiles/applications ~~~~~~~~~~~~
stata/14 stata/15
```
{: .output}

Let's take a closer look at the `matlab` module. Matlab is a widely-used piece
of software which uses matrix multiplication. As we shall see, there are
different versions available, and we want to make sure the one we use is the
correct one for our purposes.

Let's see which versions we have access to.

```
{{ site.remote.prompt }} module avail matlab
```
{: .language-bash}

```
~~~~~~~~~~~~~ /shared/ucl/apps/modulefiles/applications ~~~~~~~~~~~~
matlab/full/r2015b/8.6 matlab/full/r2017a/9.2 matlab/full/r2018b/9.5
matlab/full/r2016b/9.1 matlab/full/r2018a/9.4 matlab/full/r2019b/9.7
```
{: .output}

In this case, there are seven different versions.
How do we load each copy, and which copy is the default?

Sometimes, on some systems, a module might have a `(default)` next to it.
This indicates that it is the default (i.e. which would be loaded if we type
`module load matlab`). In this case, we don't see this, so we will have to load
matlab and see what we get.

```
{{ site.remote.prompt }} module load matlab
```
{: .language-bash}

```

~/.matlab is a symbolic link pointing to /home/yourUsername/Scratch/.matlab

Matlab setup complete type matlab to start Matlab.


Loading matlab/full/r2023a/9.14
  Loading requirement: gcc-libs/10.2.0 xorg-utils/X11R7.7
```
{: .output}

Here, we see that the default version of Matlab on the system is `r2023a/9.14`,
which in this case is the most recent version. However, you should not assume
that the default version is necessarily the latest.

As we saw in the earlier example, there are one or more dependencies.

Suppose we decide to load an earlier version of Matlab, e.g. r2017a/9.2.
You cannot load two different versions of the same software at once.
Currently, we have loaded `matlab/full/r2023a/9.14`. Let's try also loading
`matlab/full/r2021a/9.10`:

```
{{ site.remote.prompt }} module load matlab/full/r2021a/9.10
```
{: .language-bash}

```
Loading matlab/full/r2021a/9.10
  ERROR: Module cannot be loaded due to a conflict.
    HINT: Might try "module unload matlab" first.
```
{: .output}

As we can see, we get an error message about conflicts.
If we do indeed wish to load version `r2021a/9.10`, we can say

```
{{ site.remote.prompt }} module unload matlab
{{ site.remote.prompt }} module load matlab/full/r2021a/9.10
```
{: .language-bash}

or, in one step:

```
{{ site.remote.prompt }} module swap matlab/full/r2021a/9.10
```
{: .language-bash}

Check that this module has been loaded:

```
{{ site.remote.prompt }} module list
```
{: .language-bash}

```
Currently Loaded Modulefiles:
 1) gcc-libs/10.2.0   2) xorg-utils/X11R7.7   3) matlab/full/r2021a/9.10
```
{: .output}
